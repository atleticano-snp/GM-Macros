{"_id":"55JX2QYxe22OdtVC","name":"Mind Sliver","type":"spell","img":"modules/plutonium/media/icon/scroll-unfurled.svg","data":{"description":{"value":"<div class=\"rd__b  rd__b--3\"><p>You drive a disorienting spike of psychic energy into the mind of one creature you can see within range. The target must succeed on an Intelligence saving throw or take [[/r 1d6]] psychic damage and subtract [[/r 1d4]] from the next saving throw it makes before the end of your next turn.</p><div class=\"rd__spc-inline-post\"></div><p>This spell's damage increases by [[/r 1d6]] when you reach certain levels: 5th level ([[/r 2d6]]), 11th level ([[/r 3d6]]), and 17th level ([[/r 4d6]]).</p></div>","chat":"","unidentified":""},"source":"TCE","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"round"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":60,"long":null,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["1d6","psychic"]],"versatile":""},"formula":"","save":{"ability":"int","dc":null,"scaling":"spell"},"level":0,"school":"enc","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"always","prepared":true},"scaling":{"mode":"cantrip","formula":"1d6"}},"effects":[{"_id":"qIVEDq8yB9LlCEgZ","changes":[{"key":"data.bonuses.abilities.save","mode":2,"value":"-1d4","priority":"20"}],"disabled":false,"duration":{"startTime":null,"rounds":1},"icon":"modules/plutonium/media/icon/scroll-unfurled.svg","label":"Mind Sliver","transfer":false,"flags":{"dae":{"stackable":false,"macroRepeat":"none","specialDuration":["isSave"],"transfer":false},"ActiveAuras":{"isAura":false,"radius":null,"aura":"None","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"hostile":false,"onlyOnce":false}},"tint":null,"selectedKey":"data.bonuses.abilities.save"}],"folder":null,"sort":0,"permission":{"default":0,"4tdSgqYFa8LtE5cs":3,"XaHraXd0L5EoLNNo":3,"05k4ub2VgC3VLxAg":3},"flags":{"srd5e":{"page":"spells.html","source":"TCE","hash":"mind%20sliver_tce"},"core":{"sourceId":"Compendium.plutonium.spells.UcSRbOtAiMYTScHV"},"midi-qol":{"onUseMacroName":""},"autoanimations":{"killAnim":false,"override":false,"animType":"t1","animName":"","bards":{"bardAnim":"a1","bardTarget":true,"bardTargetAnim":"a1","bardTargetColor":"a1","bardSelf":true,"marker":true,"markerColor":"a1","markerColorTarget":"a1"},"spellVar":"a1","hmAnim":"a1","color":"n1","spellOptions":{"spellLoops":1},"uaStrikeType":"physical","dtvar":"dt1","divineSmite":{"dsEnable":false,"dsSelf":true,"dsSelfDelay":0,"dsSelfColor":"a1","dsTarget":true,"dsTargetDelay":1250,"dsTargetColor":"a1"},"explosion":false,"explodeVariant":"ev1","explodeColor":"","explodeRadius":"0","explodeLoop":"1","allSounds":{"explosion":{"audioExplodeEnabled":false,"file":"","delay":100,"volume":0.25},"item":{"enableAudio":false,"file":"","delay":100,"volume":0.25}},"selfRadius":"5","animTint":"#ffffff","auraOpacity":0.75,"ctaOption":false,"teleDist":30}}}
{"_id":"BvU3MCmn58F6dTd8","name":"Gift of Alacrity","type":"spell","img":"modules/plutonium/media/icon/spell/egw-gift-of-alacrity.webp","data":{"description":{"value":"<div class=\"rd__b  rd__b--3\"><p>You touch a willing creature. For the duration, the target can add [[/r 1d8]] to its initiative rolls.</p><div class=\"rd__spc-inline-post\"></div></div>","chat":"","unidentified":""},"source":"EGW","activation":{"type":"minute","cost":1,"condition":""},"duration":{"value":8,"units":"hour"},"target":{"value":null,"width":null,"units":"touch","type":""},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":"1","per":"lr"},"consume":{"type":"","target":"","amount":null},"ability":"cha","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"1d8","save":{"ability":"","dc":null,"scaling":"cha"},"level":1,"school":"div","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"innate","prepared":true},"scaling":{"mode":"none","formula":""}},"effects":[{"_id":"OwMoEzA7O4KTf5hq","changes":[{"key":"data.attributes.init.mod","mode":2,"value":"1d8","priority":"20"}],"disabled":false,"duration":{"startTime":null},"icon":"modules/plutonium/media/icon/spell/egw-gift-of-alacrity.webp","label":"Gift of Alacrity","transfer":false,"flags":{"dae":{"stackable":false,"macroRepeat":"none","specialDuration":[],"transfer":false},"ActiveAuras":{"isAura":false,"radius":null,"aura":"None","alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"hostile":false,"onlyOnce":false}},"tint":null,"selectedKey":"data.attributes.init.mod"}],"folder":null,"sort":0,"permission":{"default":0,"XaHraXd0L5EoLNNo":3,"05k4ub2VgC3VLxAg":3},"flags":{"srd5e":{"page":"spells.html","source":"EGW","hash":"gift%20of%20alacrity_egw"},"core":{"sourceId":"Item.cDZVJXsJjGY7F6P4"},"midi-qol":{"onUseMacroName":""},"autoanimations":{"killAnim":false,"override":false,"animType":"t1","animName":"","bards":{"bardAnim":"a1","bardTarget":true,"bardTargetAnim":"a1","bardTargetColor":"a1","bardSelf":true,"marker":true,"markerColor":"a1","markerColorTarget":"a1"},"spellVar":"a1","hmAnim":"a1","color":"n1","spellOptions":{"spellLoops":1},"uaStrikeType":"physical","dtvar":"dt1","divineSmite":{"dsEnable":false,"dsSelf":true,"dsSelfDelay":0,"dsSelfColor":"a1","dsTarget":true,"dsTargetDelay":1250,"dsTargetColor":"a1"},"explosion":false,"explodeVariant":"ev1","explodeColor":"","explodeRadius":"0","explodeLoop":"1","allSounds":{"explosion":{"audioExplodeEnabled":false,"file":"","delay":100,"volume":0.25},"item":{"enableAudio":false,"file":"","delay":100,"volume":0.25}},"selfRadius":"5","animTint":"#ffffff","auraOpacity":0.75,"ctaOption":false,"teleDist":30}}}
{"name":"Magic Missile","type":"spell","img":"systems/dnd5e/icons/spells/fire-arrows-magenta-1.jpg","data":{"description":{"value":"<p>You create three glowing darts of magical force. Each dart hits a creature of your choice that you can see within range. A dart deals 1d4 + 1 force damage to its target. The darts all strike simultaneously, and you can direct them to hit one creature or several.</p><p><strong>Higher Levels.Â </strong>When you cast this spell using a spell slot of 2nd level or higher, the spell creates one more dart for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 257","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":null,"units":"inst"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":120,"long":0,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":true},"scaling":{"mode":"level","formula":""}},"effects":[],"folder":null,"sort":0,"permission":{"default":0,"05k4ub2VgC3VLxAg":3},"flags":{"core":{"sourceId":"Compendium.dnd5e.spells.41JIhpDyM9Anm7cs"},"itemacro":{"macro":{"data":{"_id":null,"name":"Magic Missile","type":"script","author":"05k4ub2VgC3VLxAg","img":"icons/svg/dice-target.svg","scope":"global","command":"// Item macro, Midi-qol On Use. This handles damage, so remove it from the spell card.\n// Based on macros from Crymic and Caewok\n// https://gitlab.com/crymic/foundry-vtt-macros/-/blob/master/5e/Spells/Level%201/Magic%20Missile.js\n// https://github.com/caewok/Foundry-Macros/blob/main/spells/Level%201/Magic%20Missile/RandomMagicMissileAnimation.js\n// This version rolls damage for each missile.\n// Make sure that target is not set to 1 on the spell details\n\n(async()=>{\n    async function wait(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n    }\n\n    function isEmpty(str) {\n        const is_empty = (!str || /^\\s*$/.test(str));\n        //console.log(\"isEmpty? \" + is_empty);\n        return is_empty;\n    }\n\n    async function MagicMissilesAnimation(args1, args2, args3) {\n        console.log(\"JB2A RandomMagicMissile|args\", args1, args2, args3);\n\n        const the_caster = canvas.tokens.get(args1);\n        const the_target = canvas.tokens.get(args2);\n        const color = args3 ?? \"Blue\";\n\n        if (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n        const file = \"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/\";\n        const mmA = `${file}MagicMissile_01_Regular_${color}_30ft_01_1600x400.webm`;\n        const mmB = `${file}MagicMissile_01_Regular_${color}_30ft_02_1600x400.webm`;\n        const mmC = `${file}MagicMissile_01_Regular_${color}_30ft_03_1600x400.webm`;\n        const mmD = `${file}MagicMissile_01_Regular_${color}_30ft_04_1600x400.webm`;\n        const mmE = `${file}MagicMissile_01_Regular_${color}_30ft_05_1600x400.webm`;\n        const mmF = `${file}MagicMissile_01_Regular_${color}_30ft_06_1600x400.webm`;\n        const mmG = `${file}MagicMissile_01_Regular_${color}_30ft_07_1600x400.webm`;\n        const mmH = `${file}MagicMissile_01_Regular_${color}_30ft_08_1600x400.webm`;\n        const mmI = `${file}MagicMissile_01_Regular_${color}_30ft_09_1600x400.webm`;\n\n        const mmAA = `${file}MagicMissile_01_Regular_${color}_60ft_01_2800x400.webm`;\n        const mmBB = `${file}MagicMissile_01_Regular_${color}_60ft_02_2800x400.webm`;\n        const mmCC = `${file}MagicMissile_01_Regular_${color}_60ft_03_2800x400.webm`;\n        const mmDD = `${file}MagicMissile_01_Regular_${color}_60ft_04_2800x400.webm`;\n        const mmEE = `${file}MagicMissile_01_Regular_${color}_60ft_05_2800x400.webm`;\n        const mmFF = `${file}MagicMissile_01_Regular_${color}_60ft_06_2800x400.webm`;\n        const mmGG = `${file}MagicMissile_01_Regular_${color}_60ft_07_2800x400.webm`;\n        const mmHH = `${file}MagicMissile_01_Regular_${color}_60ft_08_2800x400.webm`;\n        const mmII = `${file}MagicMissile_01_Regular_${color}_60ft_09_2800x400.webm`;\n\n        function random_item(items) {\n        return(items[Math.floor(Math.random()*items.length)]);\n        }\n\n        const itemsA = [mmA, mmB, mmC, mmD, mmE, mmF, mmG, mmH, mmI];\n        const itemsB = [mmAA, mmBB, mmCC, mmDD, mmEE, mmFF, mmGG, mmHH, mmII];\n        const sleepNow = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n        async function Cast() {\n            let ray = new Ray(the_caster.center, the_target.center);\n            let anDeg = -(ray.angle * 57.3);\n            let anDist = ray.distance;\n\n        // not using these; just placeholders\n            let anFile = random_item(itemsA);\n            let anFileSize = 600;\n            let anchorX = 0.125;\n            \n            // set based on distance\n            switch(true){\n            case (anDist<=1800):\n                    anFileSize = 1200;\n                    anFile = random_item(itemsA);\n                    anchorX = 0.125;\n                    break;\n            default:\n                    anFileSize = 2400;\n                    anFile = random_item(itemsB);\n                    anchorX = 0.071;\n                    break;\n            }\n\n            let anScale = anDist / anFileSize;\n            let anScaleY = anScale;\n            if (anDist<=600){anScaleY = 0.6}\n            if (anDist>=700 && anDist <=1200){anScaleY = 0.8}\n            if (anDist>=1300 && anDist <=1800){anScaleY = 0.6}\n            if (anDist>=1900){anScaleY = anScale}\n\n            let spellAnim = \n            {\n                file: anFile,\n                position: the_caster.center,\n                anchor: {\n                    x: anchorX,\n                    y: 0.5\n                },\n                angle: anDeg,\n                scale: {\n                    x: anScale,\n                    y: anScaleY\n                }\n            }; \n\n            canvas.fxmaster.playVideo(spellAnim);\n            await sleepNow(80);\n            game.socket.emit('module.fxmaster', spellAnim);\n            await sleepNow(50);\n        }\n\n        Cast ()\n    }\n\n    const COLOR = \"Blue\";\n        \n    const actorD = game.actors.get(args[0].actor._id);\n    const tokenD = canvas.tokens.get(args[0].tokenId);\n    let level = 2 + Number(args[0].spellLevel);\n    if (args[0].targets.length === 1){\n        let target = canvas.tokens.get(args[0].targets[0]._id);\n        let damageRoll = new Roll(`(${level}d4 +${level})`).roll();\n        game.dice3d?.showForRoll(damageRoll);\n        new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRoll.total, \"force\", [target], damageRoll, {itemCardId: args[0].itemCardId});\n        let damage_target = `<div class=\"midi-qol-flex-container\"><div>hits</div><div class=\"midi-qol-target-npc midi-qol-target-name\" id=\"${target.id}\"> ${target.name}</div><div><img src=\"${target.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\"></div></div>`;\n        await wait(1000);\n\n        let damage_results = `<div><div class=\"midi-qol-nobox\">${damage_target}</div></div>`;\n\n        const chatMessage = await game.messages.get(args[0].itemCardId);\n        let content = await duplicate(chatMessage.data.content);\n\n        const searchString =  /<div class=\"midi-qol-hits-display\">[\\s\\S]*<div class=\"end-midi-qol-hits-display\">/g;\n        const replaceString = `<div class=\"midi-qol-hits-display\"><div class=\"end-midi-qol-hits-display\">${damage_results}`;\n\n        content = await content.replace(searchString, replaceString);\n        await chatMessage.update({ content: content });\n        \n        for(let i = 0; i < level; i++) {\n            await MagicMissilesAnimation(args[0].tokenId, args[0].targets[0]._id, COLOR);\n        }\n    }\n    if (args[0].targets.length > 1){\n        let targetList = \"\";\n        let all_targets = args[0].targets;\n\n        for (let target of all_targets) {\n            targetList += `<tr><td>${target.name}</td><td><input type=\"number\" id=\"target\" min=\"0\" max=\"${level}\" name=\"${target._id}\"></td></tr>`;\n        }\n        let the_content = `<p>You have currently <b>${level}</b> total Magic Missle bolts.</p><form class=\"flexcol\"><table width=\"100%\"><tbody><tr><th>Target</th><th>Number Bolts</th></tr>${targetList}</tbody></table></form>`;\n        new Dialog({\n            title: \"Magic Missle Damage\",\n            content: the_content,\n            buttons: {\n                one: {\n                    label: \"Damage\", callback: async (html) => {\n                        let spentTotal = 0;\n                        let selected_targets = html.find('input#target');\n                        for(let get_total of selected_targets){\n                            spentTotal += Number(get_total.value);\n                        }\n                        if (spentTotal > level) return ui.notifications.error(`The spell fails, You assigned more bolts then you have.`);\n                        let damage_target = [];\n                        let allDamageRolls = [];\n\n                        for (let selected_target of selected_targets) {\n                            let damageNum = selected_target.value;\n                            if (!isEmpty(damageNum)) {\n                                let damageRoll = new Roll(`${damageNum}d4 +${damageNum}`).roll();\n                                game.dice3d?.showForRoll(damageRoll);\n\n                                let target_id = selected_target.name;\n                                let get_target = canvas.tokens.get(target_id);\n\n                                new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRoll.total, \"force\", [get_target], damageRoll, { itemCardId: args[0].itemCardId });\n\n                                let damageRoll_Render = await damageRoll.render();\n                                allDamageRolls.push(damageRoll_Render);\n\n                                damage_target.push(`<div class=\"midi-qol-flex-container\"><div>hits</div><div class=\"midi-qol-target-npc midi-qol-target-name\" id=\"${get_target.id}\"> ${get_target.name}</div><div><img src=\"${get_target.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\"></div><div> for ${damageRoll.total} damage</div></div>`);\n\n                                for(let i = 0; i < damageNum; i++) {\n\t\t\t\t\t\t\t\t\tawait MagicMissilesAnimation(args[0].tokenId, target_id, COLOR);\n\t\t\t\t\t\t\t\t}\n                            }\n                        }\n                        let damage_list = damage_target.join('');\n                        await wait(1000);\n                        let damage_results = `<div><div class=\"midi-qol-nobox\">${damage_list}</div></div>`;\n                        let chatMessage = await game.messages.get(args[0].itemCardId);\n                        let content = await duplicate(chatMessage.data.content);\n                        const searchString =  /<div class=\"midi-qol-hits-display\">[\\s\\S]*<div class=\"end-midi-qol-hits-display\">/g;\n                        const replaceString = `<div class=\"midi-qol-hits-display\"><div class=\"end-midi-qol-hits-display\">${damage_results}`;\n                        content = await content.replace(searchString, replaceString);\n\n                        let damage_rolls = allDamageRolls.join('<div style=\"text-align:center\">(Force)</div>');\n                        const rollSearchString = /<div class=\"midi-qol-other-roll\">[\\s\\S]*<div class=\"end-midi-qol-other-roll\">/g;\n                        const rollReplaceString = `<div class=\"midi-qol-other-roll\"><div style=\"text-align:center\">(Force)</div>${damage_rolls}<div class=\"end-midi-qol-other-roll\">`;\n                        content = await content.replace(rollSearchString, rollReplaceString);\n\n                        await chatMessage.update({ content: content });\n                    }\n                }\n            }\n        }).render(true);\n    }\n})();","folder":null,"sort":0,"permission":{"default":0},"flags":{}}}},"midi-qol":{"onUseMacroName":"ItemMacro"},"autoanimations":{"killAnim":false,"override":false,"animType":"t1","animName":"","bards":{"bardAnim":"a1","bardTarget":true,"bardTargetAnim":"a1","bardTargetColor":"a1","bardSelf":true,"marker":true,"markerColor":"a1","markerColorTarget":"a1"},"spellVar":"a1","hmAnim":"a1","color":"a1","spellOptions":{"spellLoops":1},"uaStrikeType":"physical","dtvar":"dt1","divineSmite":{"dsEnable":false,"dsSelf":true,"dsSelfDelay":0,"dsSelfColor":"a1","dsTarget":true,"dsTargetDelay":1250,"dsTargetColor":"a1"},"explosion":false,"explodeVariant":"ev1","explodeColor":"","explodeRadius":"0","explodeLoop":"1","allSounds":{"explosion":{"audioExplodeEnabled":false,"file":"","delay":100,"volume":0.25},"item":{"enableAudio":false,"file":"","delay":100,"volume":0.25}},"selfRadius":"5","animTint":"#ffffff","auraOpacity":0.75,"ctaOption":false,"teleDist":30,"templates":{"tempType":"a1","tempAnim":"","tempColor":"","tempLoop":1,"customAnim":false,"customPath":""}}},"_id":"GORyPeb9dp6AYa66"}
{"_id":"bHqnrEq8Oo1PhRqw","name":"Sleep","type":"spell","img":"modules/plutonium/media/icon/spell/phb-sleep.jpg","data":{"description":{"value":"<div class=\"rd__b  rd__b--3\"><p>This spell sends creatures into a magical slumber. Roll [[/r 5d8]]; the total is how many hit points of creatures this spell can affect. Creatures within 20 feet of a point you choose within range are affected in ascending order of their current hit points (ignoring <a href=\"https://5e.tools/conditionsdiseases.html#unconscious_phb\">unconscious</a> creatures).</p><div class=\"rd__spc-inline-post\"></div><p>Starting with the creature that has the lowest current hit points, each creature affected by this spell falls <a href=\"https://5e.tools/conditionsdiseases.html#unconscious_phb\">unconscious</a> until the spell ends, the sleeper takes damage, or someone uses an action to shake or slap the sleeper awake. Subtract each creature's hit points from the total before moving on to the creature with the next lowest hit points. A creature's hit points must be equal to or less than the remaining total for that creature to be affected.</p><p>Undead and creatures immune to being <a href=\"https://5e.tools/conditionsdiseases.html#charmed_phb\">charmed</a> aren't affected by this spell.</p></div><div class=\"rd__b  rd__b--3\"><div class=\"rd__b  rd__b--3\"><span class=\"rd__h rd__h--3\" data-title-index=\"7472\"> <span class=\"entry-title-inner\">At Higher Levels.</span></span> <p>When you cast this spell using a spell slot of 2nd level or higher, roll an additional [[/r 2d8]] for each slot level above 1st.</p><div class=\"rd__spc-inline-post\"></div></div><div class=\"rd__spc-inline-post\"></div></div>","chat":"","unidentified":""},"source":"PHB","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":null,"units":"inst"},"target":{"value":20,"width":null,"units":"ft","type":"sphere"},"range":{"value":90,"long":null,"units":"ft"},"uses":{"value":0,"max":"0","per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["5d8","midi-none"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"a pinch of fine sand, rose petals, or a cricket","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"always","prepared":true},"scaling":{"mode":"level","formula":"2d8"}},"effects":[],"folder":null,"sort":0,"permission":{"default":0,"4tdSgqYFa8LtE5cs":3,"XaHraXd0L5EoLNNo":3,"05k4ub2VgC3VLxAg":3},"flags":{"srd5e":{"page":"spells.html","source":"PHB","hash":"sleep_phb"},"core":{"sourceId":"Compendium.plutonium.spells.AlbiBe8uZFPEeakZ"},"midi-qol":{"onUseMacroName":"ItemMacro"},"autoanimations":{"killAnim":false,"override":false,"animType":"t1","animName":"","bards":{"bardAnim":"a1","bardTarget":true,"bardTargetAnim":"a1","bardTargetColor":"a1","bardSelf":true,"marker":true,"markerColor":"a1","markerColorTarget":"a1"},"spellVar":"a1","hmAnim":"a1","color":"n1","spellOptions":{"spellLoops":1},"uaStrikeType":"physical","dtvar":"dt1","divineSmite":{"dsEnable":false,"dsSelf":true,"dsSelfDelay":0,"dsSelfColor":"a1","dsTarget":true,"dsTargetDelay":1250,"dsTargetColor":"a1"},"explosion":false,"explodeVariant":"ev1","explodeColor":"","explodeRadius":"0","explodeLoop":"1","allSounds":{"explosion":{"audioExplodeEnabled":false,"file":"","delay":100,"volume":0.25},"item":{"enableAudio":false,"file":"","delay":100,"volume":0.25}},"selfRadius":"5","animTint":"#ffffff","auraOpacity":0.75,"ctaOption":false,"teleDist":30},"itemacro":{"macro":{"data":{"_id":null,"name":"Sleep","type":"script","author":"05k4ub2VgC3VLxAg","img":"icons/svg/dice-target.svg","scope":"global","command":"let sleepHp = args[0].damageTotal;\n\nif(!sleepHp) {\n  ui.notifications.error(\"No arguments passed to Sleep macro\");\n  return;\n}\nconsole.log(`starting Sleep macro with sleepHp[${sleepHp}]`);\n\n// Get Targets\nlet targets = args[0].targets\nlet newTargets = targets.map(a => canvas.tokens.get(a._id))\n\n// Sort targets by HP ascending\nnewTargets = newTargets.sort(function(a, b) {\n  const hpValueOfA = a.actor.data.data.attributes.hp.value;\n  const HpValueOfB = b.actor.data.data.attributes.hp.value;\n  return hpValueOfA - HpValueOfB;\n});\n\nlet remainingSleepHp = sleepHp;\nconst condition = \"Unconscious\";\nfor(let target of newTargets) {\n  // Skip targets already unconscious\n  if(await game.cub.hasCondition(condition, target.actor)) {\n    console.log(`${target.actor.name} is already asleep, skipping it.`);\n    continue;\n  }\n\n  let targetHpValue = target.actor.data.data.attributes.hp.value;\n  if(remainingSleepHp > targetHpValue) {\n    remainingSleepHp -= targetHpValue;\n    console.log(`${target.actor.name} with hp ${targetHpValue} falls asleep, remaining hp from dice ${remainingSleepHp}.`);\n    // Apply unconscious condition to target\n    game.cub.addCondition(condition, target.actor);\n  } else {\n    console.log(`${target.actor.name} with hp ${targetHpValue} resists asleep, skipping remaining targets.`);\n    break;\n  }\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}}}}}}
