{"name":"Causar_dano","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"0GMMacros/img/Fire_target.png","command":"// apply adhoc damage by Stroud\n\nlet adHocDamage = {\n    damageButtons: function _damageButtons() {\n        return [\n            {\n                \"label\": \"🧪 Acid\",\n                \"value\": \"acid\"\n            },\n            {\n                \"label\": \"🔨 Bludgeoning\",\n                \"value\": \"bludgeoning\"\n            },\n            {\n                \"label\": \"❄️ Cold\",\n                \"value\": \"cold\"\n            },\n            {\n                \"label\": \"🔥 Fire\",\n                \"value\": \"fire\"\n            },\n            {\n                \"label\": \"🛡 Force\",\n                \"value\": \"force\"\n            },\n            {\n                \"label\": \"⚡ Lightning\",\n                \"value\": \"lightning\"\n            },\n            {\n                \"label\": \"☠️ Necrotic\",\n                \"value\": \"necrotic\"\n            },\n            {\n                \"label\": \"🏹 Piercing\",\n                \"value\": \"piercing\"\n            },\n            {\n                \"label\": \"🤮 Poison\",\n                \"value\": \"poison\"\n            },\n            {\n                \"label\": \"😱 Psychic\",\n                \"value\": \"psychic\"\n            },\n            {\n                \"label\": \"☀ Radiant\",\n                \"value\": \"radiant\"\n            },\n            {\n                \"label\": \"⚔ Slashing\",\n                \"value\": \"slashing\"\n            },\n            {\n                \"label\": \"🌩 Thunder\",\n                \"value\": \"thunder\"\n            }\n        ];\n    },\n    releaseInvalidTokens: function _releaseInvalidTokens() {\n        function shouldRelease(token) {\n            const excludedFolders = [\"Traps\", \"Loot\", \"Summons\"];\n            var folderName = token?.actor?.folder?.name ?? \"root\";\n            if (excludedFolders.includes(folderName)) {\n                return true;\n            }\n            if (token.actor.effects.filter(e => e.label == \"Dead\").length > 0) {\n                return true;\n            }\n\n            return false;\n        }\n        let tokensToRelease = canvas.tokens.controlled.filter(t => shouldRelease(t));\n        tokensToRelease.forEach(t => {\n            t.release();\n        });\n    },\n    createButtonDialog: async function _createButtonDialog(title, buttons, direction) {\n        let selected = await warpgate.buttonDialog(\n            {\n                buttons,\n                title\n            },\n            direction\n        );\n        return selected;\n    },\n    getDamageType: async function _getDamageType() {\n        return await this.createButtonDialog(\"Select Damage Type\", this.damageButtons(), 'column');\n    },\n    getDamageDice: async function _getDamageDice() {\n        let diceButtons = ['d4', 'd6', 'd8', 'd10', 'd20', 'd100'];\n        return await this.createButtonDialog(\"Select Damage Dice\", diceButtons.map(v => ({ label: v, value: v })), 'column');\n    },\n    getDiceCount: async function _getDiceCount() {\n        let numberButtons = [];\n        for (let i = 1; i <= 20; i++) {\n            numberButtons.push({ label: `${i}`, value: i });\n        }\n        return await this.createButtonDialog(\"How Many Dice?\", numberButtons, 'row');\n    },\n    getSortedNames: function _getSortedNames(targets) {\n        let sortedNames = targets.map(t => t.name).sort();\n        let targetNames = sortedNames.slice(0, sortedNames.length - 1).join(`, `);\n        if (sortedNames.length > 1) {\n            targetNames += ` and ${sortedNames[sortedNames.length - 1]} have`;\n        }\n        else {\n            targetNames = `${sortedNames[0]} has`;\n        }\n        return targetNames;\n    }\n};\n\n// release tokens that shouldn't take damage\nadHocDamage.releaseInvalidTokens();\n// get the tokens remaining\nlet targets = canvas.tokens.controlled;\nif (!targets || targets.length == 0) {\n    ui.notifications.notify(`No valid tokens selected!`);\n    return;\n}\n\nlet damageType = await adHocDamage.getDamageType();\nif (!damageType) {\n    return;\n}\nlet damageDice = await adHocDamage.getDamageDice();\nif (!damageDice) {\n    return;\n}\nlet diceCount = await adHocDamage.getDiceCount();\nif (!diceCount) {\n    return;\n}\nconst damageRoll = await new Roll(`${diceCount}${damageDice}[${damageType}]`).evaluate({ async: true })\ndamageRoll.toMessage({ flavor: `${adHocDamage.getSortedNames(targets)} been struck with ${CONFIG.DND5E.damageTypes[damageType]} damage!` });\nawait MidiQOL.applyTokenDamage([{ type: `${damageType}`, damage: damageRoll.total }], damageRoll.total, new Set(targets), null, new Set(), { forceApply: false });","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.x8EDNDBRGE8roFCU"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1687451658471,"modifiedTime":1687451965102,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"18CUD3OvcG9x1hdw"}
{"name":"Change Token Vision","permission":{"default":0,"z3axZ8yAkgVHJACm":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Change Token Vision ","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.yLoutC95PjwpImHm"}},"scope":"global","command":"// Open a dialog for quickly changing token vision parameters of the controlled tokens.\n// This macro was written by @Sky#9453\n// https://github.com/Sky-Captain-13/foundry\n\nif (canvas.tokens.controlled.length === 0)\n  return ui.notifications.error(\"Please select a token first\");\n\nlet applyChanges = false;\nnew Dialog({\n  title: `Token Vision Configuration`,\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Vision Type:</label>\n        <select id=\"vision-type\" name=\"vision-type\">\n          <option value=\"nochange\">No Change</option>\n          <option value=\"dim0\">Self</option>\n          <option value=\"dim30\">Darkvision (30 ft)</option>\n          <option value=\"dim60\">Darkvision (60 ft)</option>\n          <option value=\"dim90\">Darkvision (90 ft)</option>\n          <option value=\"dim120\">Darkvision (120 ft)</option>\n          <option value=\"dim150\">Darkvision (150 ft)</option>\n          <option value=\"dim180\">Darkvision (180 ft)</option>\n          <option value=\"bright120\">Devil's Sight (Warlock)</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Light Source:</label>\n        <select id=\"light-source\" name=\"light-source\">\n          <option value=\"nochange\">No Change</option>\n          <option value=\"none\">None</option>\n          <option value=\"candle\">Candle</option>\n          <option value=\"lamp\">Lamp</option>\n          <option value=\"bullseye\">Lantern (Bullseye)</option>\n          <option value=\"hooded-dim\">Lantern (Hooded - Dim)</option>\n          <option value=\"hooded-bright\">Lantern (Hooded - Bright)</option>\n          <option value=\"light\">Light (Cantrip)</option>\n          <option value=\"torch\">Torch</option>\n        </select>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: `Apply Changes`,\n      callback: () => applyChanges = true\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: `Cancel Changes`\n    },\n  },\n  default: \"yes\",\n  close: html => {\n    if (applyChanges) {\n      for ( let token of canvas.tokens.controlled ) {\n        let visionType = html.find('[name=\"vision-type\"]')[0].value || \"none\";\n        let lightSource = html.find('[name=\"light-source\"]')[0].value || \"none\";\n        let dimSight = 0;\n        let brightSight = 0;\n        let dimLight = 0;\n        let brightLight = 0;\n        let lightAngle = 360;\n        let lockRotation = token.data.lockRotation;\n        // Get Vision Type Values\n        switch (visionType) {\n          case \"dim0\":\n            dimSight = 0;\n            brightSight = 0;\n            break;\n          case \"dim30\":\n            dimSight = 30;\n            brightSight = 0;\n            break;\n          case \"dim60\":\n            dimSight = 60;\n            brightSight = 0;\n            break;\n          case \"dim90\":\n            dimSight = 90;\n            brightSight = 0;\n            break;\n          case \"dim120\":\n            dimSight = 120;\n            brightSight = 0;\n            break;\n          case \"dim150\":\n            dimSight = 150;\n            brightSight = 0;\n            break;\n          case \"dim180\":\n            dimSight = 180;\n            brightSight = 0;\n            break;\n          case \"bright120\":\n            dimSight = 0;\n            brightSight= 120;\n            break;\n          case \"nochange\":\n          default:\n            dimSight = token.data.dimSight;\n            brightSight = token.data.brightSight;\n        }\n        // Get Light Source Values\n        switch (lightSource) {\n          case \"none\":\n            dimLight = 0;\n            brightLight = 0;\n            break;\n          case \"candle\":\n            dimLight = 10;\n            brightLight = 5;\n            break;\n          case \"lamp\":\n            dimLight = 45;\n            brightLight = 15;\n            break;\n          case \"bullseye\":\n            dimLight = 120;\n            brightLight = 60;\n            lockRotation = false;\n            lightAngle = 52.5;\n            break;\n          case \"hooded-dim\":\n            dimLight = 5;\n            brightLight = 0;\n            break;\n          case \"hooded-bright\":\n            dimLight = 60;\n            brightLight = 30;\n            break;\n          case \"light\":\n            dimLight = 40;\n            brightLight = 20;\n            break;\n          case \"torch\":\n            dimLight = 40;\n            brightLight = 20;\n            break;\n          case \"nochange\":\n          default:\n            dimLight = token.data.dimLight;\n            brightLight = token.data.brightLight;\n            lightAngle = token.data.lightAngle;\n            lockRotation = token.data.lockRotation;\n        }\n        // Update Token\n        console.log(token);\n        token.update({\n          vision: true,\n          dimSight: dimSight,\n          brightSight: brightSight,\n          dimLight: dimLight,\n          brightLight:  brightLight,\n          lightAngle: lightAngle,\n          lockRotation: lockRotation\n        });\n      }\n    }\n  }\n}).render(true);","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/vision.jpg","actorIds":[],"_id":"2PaqqaxjFAGmHtCG"}
{"name":"Delete Effect Macro","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"modules/GMmacros/img/delete%20DAE.png","command":"const actor = token?.actor ?? game.user.character;\nconst effects = actor.effects.filter(i => i.isTemporary).reduce((acc, e) => acc += `\n  <div class=\"form-group\">\n    <label for=\"${e.id}\">${e.data.label}</label>\n    <div class=\"form-fields\"><input type=\"checkbox\" id=\"${e.id}\" /></div>\n  </div><hr>`, ``);\nconst content = `<form>${effects}</form>`;\nconst title = \"Delete effects\";\nconst buttons = {del: {\n  icon: `<i class=\"fas fa-check\"></i>`,\n  label: \"Delete!\",\n  callback: async (html) => {\n    const selected = html[0].querySelectorAll(\"input[type=checkbox]:checked\");\n    const deleteIds = [];\n    for(let s of selected) deleteIds.push(s.id);\n    await actor.deleteEmbeddedDocuments(\"ActiveEffect\", deleteIds);\n  }\n}};\nnew Dialog({content, title, buttons, default: \"del\"}).render(true);","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.urG4zGIemLZ5969h"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1670195016266,"modifiedTime":1670195135666,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"4rEiXUh6WZBB2BYi"}
{"name":"rolar uma tabela na macro (ex: wild surge barbarian)","type":"chat","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"icons/svg/dice-target.svg","command":"const table = game.tables.getName(\"Rage\");\nawait table.draw();","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.OuxR7upjToDJZQj4"},"cf":{"id":"temp_q74qsp7wj2"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.2.1","coreVersion":"10.291","createdTime":1689024837757,"modifiedTime":1689024866085,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"767UIMA98QcOq2U3"}
{"name":"Play_sound","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"modules/GMmacros/img/Turnon_sound.png","command":"(async function() {\n    for ( let p of game.playlists ) {\n        await p.stopAll();\n    }\n    const playlist = game.playlists.getName(\"Weather FX Playlist\");\n    const sound = playlist.sounds.find(s => s.name === \"rain\");\n    playlist.updateEmbeddedDocuments(\"PlaylistSound\", [{_id: sound.id, playing: true}]);\n})();","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.v7ZLq8Aw2KafdqXC"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1671379081226,"modifiedTime":1671384308050,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"9NhiW2cE6BXV5j8i"}
{"name":"Stop_all_playlists","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"modules/GMmacros/img/Turnoff_sound.png","command":"(async function() {\n    for ( let p of game.playlists ) {\n        await p.stopAll();\n    }\n})();","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.0qxe5hcsfOCv0t2O"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1671384253154,"modifiedTime":1671384306512,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"AcXwgbdtGZYzZpTw"}
{"name":"Fall_dmg","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"modules/GMmacros/img/fall_icon.png","command":"function render(html) {\n    let ths = html[0].getElementsByTagName('th');\n    for (let t of ths) {\n        t.style.width = 'auto';\n        t.style.textAlign = 'left';\n    }\n    let tds = html[0].getElementsByTagName('td');\n    for (let t of tds) {\n        t.style.width = '50px';\n        t.style.textAlign = 'center';\n        t.style.paddingRight = '5px';\n    }\n}\nlet selection = await warpgate.menu({\n    'inputs': [\n        {\n            'label': 'Distance (ft) (5ft = 1,5m):',\n            'type': 'number'\n        }\n    ],\n    'buttons': [\n        {\n            'label': 'Cancel',\n            'value': false\n        },\n        {\n            'label': 'OK',\n            'value': true\n        }\n    ]\n}, {\n    'title': 'Fall Damage',\n    'render': render\n});\nif (!selection.buttons) return;\nlet diceNum = Math.min((Math.floor(selection.inputs[0] / 10) * 10), 200) / 10;\nif (diceNum === 0) return;\nlet damageRoll = await new Roll(diceNum + 'd6[bludgeoning]').roll({async: true});\ndamageRoll.toMessage({\n    rollMode: 'roll',\n    speaker: {'alias': name},\n    flavor: 'Fall Damage'\n});\nif (!token) return;\nawait chrisPremades.helpers.applyDamage([token], damageRoll.total, 'bludgeoning');\nif (chrisPremades.helpers.checkTrait(token.actor, 'ci', 'prone')) return;\nawait chrisPremades.helpers.addCondition(token.actor, 'Prone', false);","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.gwPbRQlZ0t0u2EPl"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.2.1","coreVersion":"10.291","createdTime":1689124161344,"modifiedTime":1689124389505,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"AnH6khmA0GsdjujG"}
{"name":"Conditions_explain","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"icons/svg/dice-target.svg","command":"/* Collaborators: Jenthura, u/ccjmk, u/Freeeze014\n * This will create a dialog window with buttons for each 5e Condition ruling\n * you can select a condition and see a printout to the chat with an image\n*/\n\nfunction postToChat(conditionName, imgURL, message){ //this function takes the name of the Condition, a corresponding image URL and the message for said Condition and posts all three to the chat in a nice card\n  let chatData = { //create the chat object with a Conditions alias and variable content\n    user: game.user._id,\n    speaker: {alias: \"Conditions\"},\n    content: `<div class=\"dnd5e chat-card\" style=\"text-align: center\"><header class=\"card-header flexrow\"><h3 class=\"item-name\">${conditionName}</h3></div><br><div style=\"text-align: center\">`\n  };\n  if (imgURL != ``){ //append the image and message\n    chatData.content += `<img width=75% height=50% src=\"${imgURL}\"</img></div><br>${message}`\n  } else { //if there is no imgURL, then just show the message, currently only used for Incapacitated.\n    chatData.content += `<br>${message}`\n  }\nChatMessage.create(chatData, {}); //given all the data, print the message to chat\n};\nlet d = new Dialog({ //dialog object creates the window with all the buttons\ntitle: \"Conditions\",\ncontent: `<h2>These buttons will output text and images to chat for all players to see.<h2>`,\nbuttons: {\none: {\n label: \"👁<br>Blinded\",\n callback: () => {postToChat(`Blinded`,`https://s3.amazonaws.com/files.d20.io/images/55559719/M0zOG1K8oYu2lirzBh7rYQ/med.png?1528351640`, `A blinded creature can't see and automatically fails any ability check that requires sight.<br>Attack rolls against the creature have advantage and the creature's attack rolls have disadvantage.`)}\n},\ntwo: {\n  label: \"💞<br>Charmed\",\n  callback: () => {postToChat(`Charmed`, `https://s3.amazonaws.com/files.d20.io/images/55559726/G3D2EHHgsNBqT2ZN0_NTEQ/med.png?1528351662`, `A charmed creature can't attack the charmer or target the charmer with harmful abilities or magical effects.<br> The charmer has advantage on any ability check to interact socially with the creature.`)}\n },\n three: {\n  label: \"🔇<br>Deafened\",\n  callback: () => {postToChat(`Deafened`, `https://s3.amazonaws.com/files.d20.io/images/55559745/wlCawVD0RSr2LLmxOvvG5Q/med.png?1528351695`, `A deafened creature can't hear and automatically fails any ability check that requires hearing.`)}\n },\nfour: {\n  label: \"💤<br>Exhaustion\",\n  callback: () => {postToChat(`Exhaustion`, `https://i.imgur.com/YTBZgTw.png`, `An effect can give a creature one or more levels of exhaustion as specified in the effect's description.<br><i>1-Disadvantage on ability checks</i><br><i>2-Speed halved</i><br><i>3-Disadvantage on attack rolls and saving throws</i><br><i>4-Hit point maximum halved</i><br><i>5-Speed reduced to 0</i><br><i>6-Death</i><br> If an already exhausted creature suffers another effect that causes exhaustion its current level of exhaustion increases by the amount specified in the effect's description.<br> A creature suffers the effect of its current level of exhaustion as well as all lower levels. For example a creature suffering level 2 exhaustion has its speed halved and has disadvantage on ability checks.<br> An effect that removes exhaustion reduces its level as specified in the effect's description with all exhaustion effects ending if a creature's exhaustion level is reduced below 1.<br> Finishing a long rest reduces a creature's exhaustion level by 1 provided that the creature has also ingested some food and drink. Also being raised from the dead reduces a creature’s exhaustion level by 1.`)}\n },\nfive: {\n  label: \"😨<br>Frightened\",\n  callback: () => {postToChat(`Frightened`, `https://s3.amazonaws.com/files.d20.io/images/55559774/mVza6mErtSNLGfnDvF1QNA/med.png?1528351758`, `A frightened creature has disadvantage on ability checks and attack rolls while the source of its fear is within line of sight.<br>The creature can't willingly move closer to the source of its fear.`)}\n },\nsix: {\n  label: \"🔒<br>Grappled\",\n  callback: () => {postToChat(`Grappled`, `https://s3.amazonaws.com/files.d20.io/images/55559802/C8qd1DrhYPTnMbrkp_HV4g/med.png?1528351822`, `A grappled creature’s speed becomes 0, and it can’t benefit from any bonus to its speed.<br>The condition ends if the Grappler is incapacitated.<br>The condition also ends if an Effect removes the grappled creature from the reach of the Grappler or Grappling Effect, such as when a creature is hurled away by the thunder­wave spell.<br>Moving a Grappled Creature. When you move you can drag or carry the grappled creature with you but your speed is halved unless the creature is two or more sizes smaller than you.`)}\n },\nseven: {\n  label: \"🚫<br>Incapacitated\",\n  callback: () => {postToChat(`Incapacitated`, ``, `An incapacitated creature can't take actions or reactions.`)}\n },\neight: { \n  label: \"👻<br>Invisible\",\n  callback: () => {postToChat(`Invisible`, `https://s3.amazonaws.com/files.d20.io/images/55559846/cU6tX13w3aFAjFeQYjJH4A/med.png?1528351901`, `An invisible creature is impossible to see without the aid of magic or a special sense. For the purpose of hiding, the creature is heavily obscured. The creature's location can be detected by any noise it makes or any tracks it leaves.<br>Attack rolls against the creature have disadvantage, and the creature's attack rolls have advantage.`)}\n },\nnine: {\n  label: \"👨‍🦽<br>Paralyzed\",\n  callback: () => {postToChat(`Paralyzed`, `https://s3.amazonaws.com/files.d20.io/images/55559859/iUqwp1Nm_FqpxyCUbAhJCg/med.png?1528351931`, `A paralyzed creature is incapacitated (Check that rule) and can't move or speak.<br>The creature automatically fails Strength and Dexterity saving throws. Attack rolls against the creature have advantage.<br>Any attack that hits the creature is a critical hit if the attacker is within 5 feet of the creature.`)}\n },\nten: {\n  label: \"😑<br>Petrified\",\n  callback: () => {postToChat(`Petrified`, `https://s3.amazonaws.com/files.d20.io/images/55559865/HP_qIlp2sw6yK6sJvepEzw/med.png?1528351950`, `A petrified creature is transformed along with any nonmagical object it is wearing or carrying into a solid inanimate substance (usually stone). Its weight increases by a factor of ten and it ceases aging.<br>The creature is incapacitated (check that rule) can't move or speak and is unaware of its surroundings.<br>Attack rolls against the creature have advantage.<br>The creature automatically fails Strength and Dexterity saving throws.<br>The creature has resistance to all damage.<br>The creature is immune to poison and disease although a poison or disease already in its system is suspended not neutralized.`)}\n },\neleven: {\n  label: \"🐍<br>Poisoned\",\n  callback: () => {postToChat(`Poisoned`, `https://s3.amazonaws.com/files.d20.io/images/55559874/XTkBXciYb4qBpHS0vkAQUA/med.png?1528351968`, `A poisoned creature has disadvantage on attack rolls and ability checks.`)}\n },\ntwelve: {\n  label: \"🛌<br>Prone\",\n  callback: () => {postToChat(`Prone`, `https://s3.amazonaws.com/files.d20.io/images/55559883/rGGD5WabxIUsQa2jREglow/med.png?1528351995`, `A prone creature's only movement option is to crawl unless it stands up and thereby ends the condition.<br>The creature has disadvantage on attack rolls.<br>An attack roll against the creature has advantage if the attacker is within 5 feet of the creature. Otherwise the attack roll has disadvantage.<br>You can drop prone without using any of your speed. Standing up takes more effort doing so costs an amount of movement equal to half your speed. For example if your speed is 30 feet you must spend 15 feet of movement to stand up. You can't stand up if you don't have enough movement left or if your speed is 0.<br>To move while prone you must crawl or use magic such as teleportation. Every foot of movement while crawling costs 1 extra foot. Crawling 1 foot in difficult terrain therefore costs 3 feet of movement.`)}\n },\nthirteen: {\n  label: \"🕸<br>Restrained\",\n  callback: () => {postToChat(`Restrained`, `https://s3.amazonaws.com/files.d20.io/images/55559904/mfyAH2l0Y7nDgk3gXdijQQ/med.png?1528352037`, `A restrained creature's speed becomes 0 and it can't benefit from any bonus to its speed.<br>Attack rolls against the creature have advantage and the creature's attack rolls have disadvantage.<br>The creature has disadvantage on Dexterity saving throws.`)}\n },\nfourteen: {\n  label: \"💫<br>Stunned\",\n  callback: () => {postToChat(`Stunned`, `https://s3.amazonaws.com/files.d20.io/images/55559922/0-xqSluttXlVB6ANk3pwhQ/med.png?1528352065`, `A stunned creature is incapacitated, can't move and can speak only falteringly.<br>The creature automatically fails Strength and Dexterity saving throws.<br>Attack rolls against the creature have advantage.<br>An incapacitated creature can't take actions or reactions.`)}\n },\nfifteen: {\n  label: \"😵<br>Unconscious\",\n  callback: () => {postToChat(`Unconscious`, `https://s3.amazonaws.com/files.d20.io/images/55559936/3DEXMpEJnv0F7X1mRVsDPQ/med.png?1528352098`, `An unconscious creature is incapacitated can't move or speak and is unaware of its surroundings.<br>The creature drops whatever it's holding and falls prone.<br>The creature automatically fails Strength and Dexterity saving throws.<br>Attack rolls against the creature have advantage.<br>Any attack that hits the creature is a critical hit if the attacker is within 5 feet of the creature.`)}\n }\n},\ndefault: \"one\",\nrender: html => console.log(\"Register interactivity in the rendered dialog\"),\nclose: html => console.log(\"This always is logged no matter which option is chosen\")\n});\nd.render(true);","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.S6Wo2DG0xcwyFkDD"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.2.1","coreVersion":"10.291","createdTime":1688602840373,"modifiedTime":1688603946691,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"BTZ11OWU0RmyvZiP"}
{"name":"New Macro","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"modules/GMmacros/img/Lair_initiative.png","command":"await token.combatant.update({initiative: 20});","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":true,"runForEveryone":true,"runForSpecificUser":""},"core":{"sourceId":"Macro.pLI6kUv13QAlng0G"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669249009976,"modifiedTime":1669249191318,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"BXbQBqIAjBnEzBIo"}
{"name":"Gold_Changer","permission":{"default":0,"z3axZ8yAkgVHJACm":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro ","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.9ueMmrsGlKkx6kV8"}},"scope":"global","command":"//Money Give/Remover -> target necessary\n\n(()=>{\n\tlet targets = game.user.targets;\n\n\tlet targets_content =``;\n\n\tfor(let target of targets)\n\t{\n\t\ttargets_content += `<img src=${target.data.img} width=\"50\" height=\"50\">`\n\t}\n\n\tlet dialog_content = `\n\t<p></p>\n\t${targets_content}\n\t<div class = \"form-group\">\n\t\t<label for=\"pp\">Platnium<label>\n\t\t<input name=\"pp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"><br>\n\t\t<label for=\"gp\">Gold    <label>\n\t\t<input name=\"gp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"><br>\n\t\t<label for=\"ep\">Electrum<label>\n\t\t<input name=\"ep\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"><br>\n\t\t<label for=\"sp\">Silver  <label>\n\t\t<input name=\"sp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"><br>\n\t\t<label for=\"cp\">Copper  <label>\n\t\t<input name=\"cp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"><br>\n\t</div>`;\n\n\tnew Dialog({\n\t\tcontent : dialog_content,\n\t\tbuttons : \n\t\t{\n\t\t\tOk : {icon : ``, label : `Change Money.`, callback : (html) => changeMoney(targets,html)}\n\t\t}\n\t}).render(true);\n})();\n\nasync function changeMoney(targets,html)\n{\n\tlet difference_money = {\n\t\tpp : parseInt(html.find('[name=pp]')[0].value),\n\t\tgp : parseInt(html.find('[name=gp]')[0].value),\n\t\tep : parseInt(html.find('[name=ep]')[0].value),\n\t\tsp : parseInt(html.find('[name=sp]')[0].value),\n\t\tcp : parseInt(html.find('[name=cp]')[0].value)\n\t}\n\n  //console.log(targets,update_money);\n  \n  //divide update_money based on # of targets\n  difference_money = divideValue(difference_money, targets.size);\n\n  console.log(difference_money);\n\n\tfor(let target of targets)\n\t{\n    let original_money = duplicate(target.actor.data.data.currency);\n    let update_money = changeValue(original_money,difference_money);    \n\n    console.log(target.actor.name)\n    console.log(original_money)\n    console.log(difference_money)\n    console.log(update_money);\n\n    await target.actor.update({\"data.currency\" : update_money});\n\t}\n}\n\nfunction changeValue(Original, Difference)\n{\n  let Update = {pp :0, gp:0, ep:0, sp :0, cp: 0};\n\n  for(let key in Original)\n  {\n    Update[key] = Original[key] + Difference[key];\n    if(Update[key] < 0)\n    {\n      switch(key)\n      {\n        case \"cp\" :\n          if (Update[\"sp\"] > 0)\n          {\n            Update[\"cp\"] += 10;\n            Update[\"sp\"] -= 1;\n          }\n          else if(Update[\"ep\"] > 0)\n          {\n            Update[\"cp\"] += 50;\n            Update[\"ep\"] -= 1;\n          }\n          else if(Update[\"gp\"] > 0)\n          {\n            Update[\"cp\"] += 100;\n            Update[\"gp\"] -= 1;\n          }\n          else if(Update[\"pp\"] > 0)\n          {\n            Update[\"cp\"] += 1000;\n            Update[\"pp\"] -= 1;\n          }else{\n            throw new Error(`Not enough money to do that.`);\n          }\n          Update = changeValue(Update, {pp :0, gp:0, ep:0, sp :0, cp: 0});\n          break;\n        case \"sp\" :\n          if (Update[\"ep\"] > 0)\n          {\n            Update[\"sp\"] += 5;\n            Update[\"ep\"] -= 1;\n          }\n          else if(Update[\"gp\"] > 0)\n          {\n            Update[\"sp\"] += 10;\n            Update[\"gp\"] -= 1;\n          }\n          else if(Update[\"pp\"] > 0)\n          {\n            Update[\"sp\"] += 100;\n            Update[\"pp\"] -= 1;\n          }\n          else if(Update[\"cp\"] > 9)\n          {\n            Update[\"sp\"] += 1;\n            Update[\"cp\"] -= 10;\n          }else{\n            throw new Error(`Not enough money to do that.`);\n          }\n          Update = changeValue(Update, {pp :0, gp:0, ep:0, sp :0, cp: 0});\n          break;\n        case \"ep\" :\n          if (Update[\"gp\"] > 0)\n          {\n            Update[\"ep\"] += 2;\n            Update[\"gp\"] -= 1;\n          }\n          else if(Update[\"pp\"] > 0)\n          {\n            Update[\"ep\"] += 20;\n            Update[\"pp\"] -= 1;\n          }\n          else if(Update[\"sp\"] > 4)\n          {\n            Update[\"ep\"] += 1;\n            Update[\"sp\"] -= 5;\n          }\n          else if(Update[\"cp\"] > 49)\n          {\n            Update[\"ep\"] += 1;\n            Update[\"cp\"] -= 50;\n          }else{\n            throw new Error(`Not enough money to do that.`);\n          }\n          Update = changeValue(Update, {pp :0, gp:0, ep:0, sp :0, cp: 0});\n          break;\n        case \"gp\" :\n          if (Update[\"pp\"] > 0)\n          {\n            Update[\"gp\"] += 10;\n            Update[\"pp\"] -= 1;\n          }\n          else if(Update[\"ep\"] > 1)\n          {\n            Update[\"gp\"] += 1;\n            Update[\"ep\"] -= 2;\n          }\n          else if(Update[\"sp\"] > 9)\n          {\n            Update[\"gp\"] += 1;\n            Update[\"sp\"] -= 10;\n          }\n          else if(Update[\"cp\"] > 99)\n          {\n            Update[\"gp\"] += 1;\n            Update[\"cp\"] -= 100;\n          }else{\n            throw new Error(`Not enough money to do that.`);\n          }\n          Update = changeValue(Update, {pp :0, gp:0, ep:0, sp :0, cp: 0});\n          break;\n        case \"pp\" :\n          if (Update[\"gp\"] > 9)\n          {\n            Update[\"pp\"] += 1;\n            Update[\"gp\"] -= 10;\n          }\n          else if(Update[\"ep\"] > 19)\n          {\n            Update[\"pp\"] += 1;\n            Update[\"ep\"] -= 20;\n          }\n          else if(Update[\"sp\"] > 99)\n          {\n            Update[\"pp\"] += 1;\n            Update[\"sp\"] -= 100;\n          }\n          else if(Update[\"cp\"] > 999)\n          {\n            Update[\"pp\"] += 1;\n            Update[\"cp\"] -= 1000;\n          }else{\n            throw new Error(`Not enough money to do that.`);\n          }\n          Update = changeValue(Update, {pp :0, gp:0, ep:0, sp :0, cp: 0});\n      }\n    }\n  }\n  return Update;\n}\n\nfunction divideValue(Object, Value)\n{\n  if(Value === 1) return Object;\n  let remainder = 0;\n  let Update = {pp :0, gp:0, ep:0, sp :0, cp: 0};\n\n  for(let key in Object)\n  {\n    Update[key] = Object[key] + remainder;\n    remainder = Object[key]%Value;\n    if(Update[key] > 0) Update[key] = Math.floor(Update[key]/Value);\n    if(Update[key] < 0) Update[key] = Math.ceil(Update[key]/Value);\n    if(remainder !== 0)\n    {\n      if(key === \"ep\")\n      {remainder *= 5;}\n      else if (key === \"gp\")\n      {remainder *= 2;}\n      else\n      {remainder *= 10;}\n    }\n  }\n  console.log(`There was ${remainder/10} cp left over.`);\n  return Update;\n}\n\nfunction x(Original, edit_key)\n{\n  let Update = duplicate(Original);\n  for(let key in Update)\n  {\n    if(key === edit_key)\n    {\n\n    }\n  }\n}","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/gold.png","actorIds":[],"_id":"E4errsrb19mXoeL9"}
{"name":"Timer","type":"script","author":"V3S7gLWyximUusS6","img":"modules/GMmacros/img/Clocl.png","scope":"global","command":"let seconds_selected = 0;\nlet seconds_left = 0;\n\nlet times = {\n  buttons : [\n    [\"1 Min\", ()=> { seconds_selected = seconds_left = 60; update_dialog();}],\n    [\"2 Min\", ()=> { seconds_selected = seconds_left = 120; update_dialog();}],\n    [\"10 Min\", ()=> { seconds_selected = seconds_left = 600; update_dialog(); }],\n    [\"15 Min\", ()=> { seconds_selected = seconds_left = 900; update_dialog(); }],\n    [\"20 Min\", ()=> { seconds_selected = seconds_left = 1200; update_dialog(); }],\n    [\"30 Min\", ()=> { seconds_selected = seconds_left = 1800; update_dialog(); }]\n  ],\n  content : `<div sytle=\"width:100%; text-align:center;\"><h2> Choose a timer limit : </h2></div>`,\n  title : `Timer Selector`\n};\n\nasync function button_dialog(data)\n{\n  let value = await new Promise((resolve) => {\n    let buttons = {}, dialog;\n\n    data.buttons.forEach(([str, callback])=>{\n      buttons[str] = {\n        label : str,\n        callback\n      }\n    });\n  \n    dialog = new Dialog({title : data.title , content : data.content, buttons, close : () => resolve(true) }).render(true);\n  });\n  return value;\n}\n\nasync function update_dialog()\n{\n  let interval, content, buttons, dialog, interval_time;\n\n  interval_time = 1;\n  content = getContent();\n  buttons = getButtons();\n\n  dialog = new Dialog({ title : `Timer`, content, buttons, close : () =>  { clearInterval(interval); }}, {width : 200 }).render(true);\n\n  console.log(dialog);\n\n  interval = setInterval(()=> {\n    update();\n  }, interval_time * 1000);\n\n  function getContent()\n  {\n\n    if(seconds_left !== 0 )\n    {\n      let minutes = Math.floor(seconds_left/60);\n      let seconds = seconds_left%60;\n  \n      if (minutes < 10) minutes = `0${minutes}`;\n      if (seconds < 10) seconds = `0${seconds}`;\n\n      return `<div sytle=\"width:100%; text-align:center;\"><h1>${minutes}:${seconds}</h1></div>`;\n    }else{\n      if(dialog.data.content.includes(`Complete`))\n      {\n        return ``;\n      }else{\n        return `<div sytle=\"width:100%; text-align:center; color:red;\"><h1>Complete</h1></div>`;\n      }\n    }\n  }\n  function getButtons()\n  {\n    return {\n      Restart : { label : `Restart`, callback : () => { seconds_left = seconds_selected; update_dialog(); }},\n      Cancel : { label : `Cancel`, callback : () => { clearInterval(interval); }}\n    };\n  }\n  function update()\n  {\n    if(seconds_left !== 0) seconds_left--;\n\n    dialog.data.content = getContent();\n    dialog.render(true);\n  }\n}\n\nbutton_dialog(times);","folder":null,"sort":0,"permission":{"default":0,"V3S7gLWyximUusS6":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"core":{"sourceId":"Macro.zDlhPUiiLzlHF7fb"}},"_id":"H546dFpPwCBTKxqJ"}
{"name":"Delete_sequencer","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"0GMMacros/img/seq_delete.png","command":"await Sequencer.EffectManager.endEffects({object: token })\n\nnew Sequence()\n\n.animation()\n.on(token)\n.opacity(1)\n\n.play();","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":true,"runForSpecificUser":""},"core":{"sourceId":"Macro.MKe53IiwHXpeIJEM"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1687264094326,"modifiedTime":1687484040808,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"IkMXZqwJgH6YnKqI"}
{"name":"Set Token bars and nameplate","type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Set Token bars and nameplate ","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.iOX5h0jIxJI0VTdW"},"advanced-macros":{"runForSpecificUser":""}},"scope":"global","command":"// Update all tokens on the map so that the name shows on hover and the bars always show.\n// Display Modes: ALWAYS, CONTROL, HOVER, NONE, OWNER, OWNER_HOVER\n\nconst tokens = canvas.tokens.placeables.map(token => {\n  return {\n    _id: token.id,\n    \"bar1.attribute\": \"attributes.hp\",\n    \"bar2.attribute\": \"attributes.ac.value\",\n    \"displayName\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\n    \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS\n  };\n});\n\ncanvas.scene.updateEmbeddedDocuments('Token', tokens)","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/Token_bar-Names.png","_id":"Mhu8fbpc7bL8hYJN","ownership":{"default":0,"z3axZ8yAkgVHJACm":3},"folder":null,"sort":0,"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1685059375392,"lastModifiedBy":"Be8r6Sgxcs3sL08I"}}
{"_id":"MpmExeEC7crDxfnn","name":"Activate_effect_criando","type":"script","author":"rbM5nB1AbUwbj4yJ","img":"icons/svg/dice-target.svg","scope":"global","command":"const effect = {\nlabel: \"Dodge\", icon: \"modules/GMmacros/img/defensive-stance.jpg\", \nchanges: [{value: 1, mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, priority: 20, key:\"flags.midi-qol.grants.disadvantage.attack.all\"}],\nduration: {rounds: 1}\n};\n\nif(token){\n  let effectPresent = !!token.actor.effects.find(e => e.data.label === effect.label);\n  if(effectPresent) removeEffect({ actor : token.actor, effectLabel : effect.label });\n  else addEffect({ actor : token.actor, effectData : effect });\n}\n\nasync function removeEffect({ actor, effectLabel }){\n  if(!actor || !effectLabel) return;\n  let effect = actor.effects.find(e => e.data.label === effectLabel);\n  if(!effect) return;\n\n  await actor.deleteEmbeddedEntity(\"ActiveEffect\", [effect.id]);\n}\nasync function addEffect({ actor, effectData }){\n  if(!actor || !effectData) return;\n  await actor.createEmbeddedEntity(\"ActiveEffect\", effectData );\n}\n\n//// método 2, na macro.\nlet atarget  = Array.from(game.user.targets)[0].actor;\n\nconst efffectData = {\nlabel: \"Staggering Smite\", icon: \"modules/GMmacros/img/phb-searing-smite.webp\", \nchanges: [{\nvalue: 'turn=start,damageRoll=1d6,type=fire,saveDC=${spelldc},saveAbility=con,label=Searing Smite', \nmode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, \npriority: 20, \nkey:\"flags.midi-qol.OverTime\"}],\nduration: {rounds: 10}\n}\nawait target.createEmbeddedDocuments(\"ActiveEffect\", efffectData);","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"exportSource":{"world":"criador","system":"dnd5e","coreVersion":"0.8.8","systemVersion":"1.3.6"},"macro-marker":{"activeData":{"tooltip":"Activate Effect"}},"core":{"sourceId":"Macro.gci5bb1cckFTR42p"},"cf":{"id":"temp_q74qsp7wj2"}},"ownership":{"default":0,"rbM5nB1AbUwbj4yJ":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.2.1","coreVersion":"10.291","createdTime":null,"modifiedTime":1688167694898,"lastModifiedBy":"Be8r6Sgxcs3sL08I"}}
{"name":"Monks contested roll","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"icons/svg/dice-target.svg","command":"const attacker = token; //selected token\nconst target = game.user.targets.first(); //targeted creature\n\nconst skilltoberolled = target.actor.system.skills.ath.total < target.actor.system.skills.acr.total ? \"acr\" : \"ath\";\n\nawait game.MonksTokenBar.requestContestedRoll({\n    token:attacker,\n    request: 'skill:ath'\n},{\n    token: target,\n    request:`skill:${skilltoberolled}`\n},{\n    silent:true, \n    fastForward:false,\n    flavor: `${attacker.name} tries to grapple ${target.name}.`, \n});","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.eVL9P1dzEy6w6rtJ"},"cf":{"id":"temp_q74qsp7wj2"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1670203965254,"modifiedTime":1670204021669,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"N6jbG3zvYwaxeXff"}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_q74qsp7wj2","name":"Exemplos","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":["N6jbG3zvYwaxeXff","MpmExeEC7crDxfnn","767UIMA98QcOq2U3"],"children":[],"folderPath":[],"version":"2.5.7"}},"author":"Be8r6Sgxcs3sL08I","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.2.1","coreVersion":"10.291","createdTime":1670204010042,"modifiedTime":1689024866085,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"_id":"P4Tb6oVnOKFDwFTk"}
{"name":"ADD-Cub-Condition","permission":{"default":0,"z3axZ8yAkgVHJACm":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.RpuEJrkUjZIDqVU2"}},"scope":"global","command":"let options = '';\ngame.cub.conditions.forEach((item) => {\n  options += `<option value=\"${item.name}\">\\n`;\n});\nlet content = `\n<form>\n  <div class=\"form-group\">\n    <label for=\"condition\">Condition:</label>\n    <input list=\"conditions\" id=\"condition\" name=\"condition\"/ autofocus>\n    <datalist id=\"conditions\">\n      ${options}\n    </datalist>\n  </div>\n</form>\n`\n\nnew Dialog({\n  title: `Select Condition`,\n  content: content,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: `Apply`,\n      callback: (html) => {\n        let condition = html.find('#condition').val();\n        if (!game.cub.conditions.some(el => el.name === condition)) {\n          return ui.notifications.info(\"Select a valid condition.\");\n        }\n\n        //apply the condition to selected tokens (0.6.6)\n        //game.cub.applyCondition(condition);\n\n    //apply the condition to the selected tokens (0.7.5)\n    game.cub.addCondition(condition);\n\n      }\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: `Cancel`\n    },\n  },\n  default: \"yes\"\n}).render(true);\n\n(async () => {\n  await new Promise(resolve => setTimeout(resolve, 20));\n  let input = $('#condition').focus();\n})();","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/0%20add_effects%20-%20Copia.png","actorIds":[],"_id":"Ru5ktRnPyz60nsxm"}
{"name":"Mudar token selecionado","type":"script","scope":"global","author":"Be8r6Sgxcs3sL08I","img":"tokenizer/npc-images/beast_of_the_sky.Token.webp?1671312327707","command":"//\n// Macro for changing token image, size, and name.\n//\nif (!token) return ui.notifications.warn('You need to select a token before using this macro!');  // token is defined as the first selected token placeable if executed from the hotbar\n\n// Set Token settings\nlet tokenB = 'tokenizer/npc-images/beast_of_the_sky.Token.webp?1671312327707';\nlet sizeB = 1;\nlet nameB = \"Hirah\";\n\nconst update = {\"texture.scaleY\": sizeB, \"texture.scaleX\": sizeB, \"texture.src\": tokenB, name: nameB, displayBars: CONST.TOKEN_DISPLAY_MODES.ALWAYS};\n\ntoken.document.update(update);","ownership":{"default":0,"Be8r6Sgxcs3sL08I":3},"flags":{"advanced-macros":{"runAsGM":true,"runForSpecificUser":""},"core":{"sourceId":"Macro.fUjRmHpvdB2q3A0w"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.2.1","coreVersion":"10.291","createdTime":1688134077786,"modifiedTime":1688603982730,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"S92ZCrMNQXlcSeCD"}
{"name":"Display Attribute Lists for Selected Actor","permission":{"default":0,"NeG597KOgANJAOdY":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.vIYlN91XcHeOY5KW"}},"scope":"global","command":"ShowActorAttributeData(actor);","author":"NeG597KOgANJAOdY","img":"icons/svg/book.svg","actorIds":[],"_id":"XCpYWe1J18bOKtAf"}
{"name":"DoTrapAttack","type":"script","author":"05k4ub2VgC3VLxAg","img":"modules/GMmacros/img/trap.png","scope":"global","command":"// Requires midi-qol to work at all\n// Rolls an attack from actor args[0] using item args[1] and display a token args[2]\nlet tactor = game.actors.entities.find(a => a.name === args[0])\nif (!tactor) return `/Whisper GM \"DoTrap: Target token ${args[0]} not found\"`\nlet item = tactor.items.find(i=>  i.name === args[1])\nif (!item) return `/Whisper GM \"DoTrap: Item ${args[1]} not found\"`\nlet oldTargets = game.user.targets;\ngame.user.targets = new Set().add(token);\nlet trapToken = canvas.tokens.placeables.find(t=>t.name === args[2]);\nif(trapToken.data.hidden) {\nnew MidiQOL.TrapWorkflow(tactor, item, [token], trapToken.center)\n//uncomment the next line if you use conditional visibility to hide traps\n//game.cub.removeAllConditions(trapToken);\nif (trapToken) await trapToken.update({\"hidden\" : false});\n}","folder":null,"sort":0,"permission":{"default":0,"05k4ub2VgC3VLxAg":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"core":{"sourceId":"Macro.I7zTvROyLfRboIHq"}},"_id":"XLRUHkIJDhtoc12i"}
{"name":"Stealth Check","permission":{"default":0,"z3axZ8yAkgVHJACm":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Stealth Check","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.RTiO1Z1tasafiWAo"}},"scope":"global","command":"// Grabs selected tokens and rolls a stealth check against all other tokens passive perception on the map. Then returns the result.\n\n// getting all actors of selected tokens\nlet actors = canvas.tokens.controlled.map(({ actor }) => actor);\n\n// if there are no selected tokens, roll for the player's character.\nif (actors.length < 1) {\n  actors = game.users.entities.map(entity => {\n    if (entity.active && entity.character !== null) {\n      return entity.character;\n    }\n  });\n}\nconst validActors = actors.filter(actor => actor != null);\n\nlet messageContent = 'pp = passive perception<br>';\n\n// roll for every actor\nfor (const selectedActor of validActors) {\n  const stealthMod = selectedActor.data.data.skills.ste.total; // stealth roll\n  const stealth = new Roll(`1d20+${stealthMod}`).roll().total; // rolling the formula\n  messageContent += `<hr><h3>${selectedActor.name} stealth roll was a <b>${stealth}</b>.</h3>`; // creating the output string\n\n  // grab a list of unique tokens then check their passive perception against the rolled stealth.\n  const uniqueActor = {};\n  const caughtBy = canvas.tokens.placeables\n    .filter(token => !!token.actor)\n    .filter(({ actor }) => { // filter out duplicate token names. ie: we assume all goblins have the same passive perception\n      if (uniqueActor[actor.name]) {\n        return false;\n      }\n      uniqueActor[actor.name] = true;\n      return true;\n    })\n    .filter(({ actor }) => {\n      return selectedActor.id !== actor.id; // Don't check to see if the token sees himself.\n    })\n    .filter(({ actor }) => actor.data.data.skills.prc.passive >= stealth); // check map tokens passives with roller stealth\n\n  if (!caughtBy.length) {\n    messageContent += 'Stealth successful!<br>';\n  } else {\n    messageContent += 'Stealth questionable:<br>';\n    caughtBy.map(({ actor }) => {\n      messageContent += `<b>${actor.name}</b> pp(${actor.data.data.skills.prc.passive}).<br>`;\n    });\n  }\n}\n\n// create the message\nconst chatData = {\n  user: game.user._id,\n  speaker: game.user,\n  content: messageContent,\n  whisper: game.users.entities.filter((u) => u.isGM).map((u) => u._id),\n};\nChatMessage.create(chatData, {});","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/StealthCheck.jpg","actorIds":[],"_id":"bjOlsOzn1A1qew1b"}
{"name":"Attacher","type":"script","author":"QwT9izJ4aW8QVTjo","img":"icons/svg/target.svg","scope":"global","command":"async function TemplateAttach() {\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let target_token = canvas.tokens.placeables.find(i => i.center.x === template.center.x && i.center.y === template.center.y);\n    tokenAttacher.attachElementToToken(template, target_token)\n}\nTemplateAttach();","folder":null,"sort":0,"permission":{"default":0,"QwT9izJ4aW8QVTjo":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.c7EmRH2EiyZ2gtvI"}},"_id":"bkybrbMBy35BUlp2"}
{"name":"Show_DAE_Effect","permission":{"default":0,"z3axZ8yAkgVHJACm":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.zTEAaKrJTPbu5feQ"}},"scope":"global","command":"new DAE.ActiveEffects(actor, {}).render(true)","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/Show_effects.png","actorIds":[],"_id":"h02h04Tf54HVf3WH"}
{"name":"Passar_turno","type":"script","author":"Be8r6Sgxcs3sL08I","img":"modules/GMmacros/img/skip_turn.jpg","scope":"global","command":"/*\nAuthor: willisrocks\nDescription: \nEnds the current actors turn in a combat encounter. Useful when you don't pop out your combat tracker\nand want to end the turn from your hotbar.\nIf the user is a gamemaster, it will always end the current turn. For players, it will only end \nthe turn when the current actor in the turn order is owned by you. \nBased on the work of reddit user serrag97: https://www.reddit.com/r/FoundryVTT/comments/j1b8gs/next_turn_shortcut/\n*/\n\n// check if the user is a GM\nconst isGM = game.user.isGM;\n// check if the user owns the combatant whose turn it is\nconst isOwner = game.combat.combatant.isOwner;\n\nif (isGM || isOwner) {\n  game.combat.nextTurn();\n} else {\n  ui.notifications.info(\"As a player you can only advance your turn\");\n}","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"exportSource":{"world":"criador","system":"dnd5e","coreVersion":"0.8.8","systemVersion":"1.3.6"},"core":{"sourceId":"Macro.Us9ANKoXgfEYWFxz"}},"ownership":{"default":0,"rbM5nB1AbUwbj4yJ":3,"Be8r6Sgxcs3sL08I":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1668380924431,"modifiedTime":1668433265621,"lastModifiedBy":"Be8r6Sgxcs3sL08I"},"folder":null,"sort":0,"_id":"iMJ23YDl61PvAUTr"}
{"name":"FX- Delete filters on Selected","permission":{"default":0,"z3axZ8yAkgVHJACm":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"00 - A - Delete filters on Selected","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.k3nJVdOcsbMDVnrb"}},"scope":"global","command":"// Delete all filters on the selected tokens/tiles\nTokenMagic.deleteFiltersOnSelected();","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/filter_delete.png","actorIds":[],"_id":"ncziV2PK1rIupbC6"}
{"name":"Toggle DEA via Macro","permission":{"default":0,"X2FU4EYTKyUpwF0o":3},"type":"chat","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.5brmSxdf10g513Vt"}},"scope":"global","command":"const nome = \"MeuEfeito\"; // Troque MeuEfeito pelo nome exato do efeito que você quer ligar ou desligar.\n\nconst macroVersion = 'v0.2';\n\n/* Ativar/Desativar Efeito\nSource: https://raw.githubusercontent.com/brunocalado/mestre-digital/master/Foundry%20VTT/Macros/DnD%205e/ToogleAE.js\nIcon: \n*/\n//\n\nif (!actor) {\n  ui.notifications.warn(`Selecione um token!`); // get selected token \n} else {\n  main();\n}\n\nasync function main() {  \n  let effect = canvas.tokens.controlled[0].actor.effects.find(i => i.data.label === nome);\n  if (!effect) {\n    ui.notifications.warn(`Efeito não localizado!`); // get selected token \n  } else {\n    await effect.update({disabled: !effect.data.disabled});            \n    let mensagem = `O efeito <b>${nome}</b> foi <b>${effect.data.disabled?'ligado':'desligado'}</b>`;\n    let chatData = {\n      user: game.user._id,\n      speaker: ChatMessage.getSpeaker(),\n      content: mensagem\n    };  \n    ChatMessage.create(chatData, {});    \n    \n  }\n}","author":"X2FU4EYTKyUpwF0o","img":"modules/GMmacros/img/ToggleDae.png","actorIds":[],"_id":"oSXKzjHL7Tc7pMvK"}
{"name":"Add-TempHP","permission":{"default":0,"z3axZ8yAkgVHJACm":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.rl0SGMTuz0vHiWpC"}},"scope":"global","command":"//Add or subtract Temp HP. Will do math or rolls.\n//Preface with \"=\" to set to exactly that number\n/* Alt Use: */\n//Can be used wtihin entity link buttons. Anything but the first number is ignored.\n//\"->\" can be used to subtract the number of the next inline roll encountered\n//\"+>\" can be used to add the number of the next inline roll encountered\n//\"=>\" can be used to set to the number of the next inline roll encountered\n//Examples: (All are equivalent)\n//\t@Macro[Add Temp HP]{Add Temp HP ->}[[5+3]]\n//\t@Macro[Add Temp HP]{+8 THP}\n//\t@Macro[Add Temp HP]{Set to =>}[[@attributes.hp.temp + 3 + 5]]\n\nvar controlled = canvas.tokens.controlled.map(o => o.actor),\n\tinputText = false,\n\tchatMessage = game.messages.get(event.srcElement.closest('.message')?.getAttribute('data-message-id'));\nif (window.macroChain?.length || event.srcElement.nodeName == 'A')\n\tinputText = window.macroChain?.pop() || event.srcElement.textContent.trim();\n\nif (inputText) {\n\tif (inputText.indexOf('->') > -1)\n\t\tinputText = '-1 * (' + event.srcElement.nextElementSibling?.textContent.trim() + ')';\n\telse if (inputText.indexOf('+>') > -1)\n\t\tinputText = event.srcElement.nextElementSibling?.textContent.trim();\n\telse if (inputText.indexOf('=>') > -1)\n\t\tinputText = '=' + event.srcElement.nextElementSibling?.textContent.trim();\n\telse\n\t\tinputText = inputText.match(/([=-]?\\d)+/)?.[1];\n}\nif (!inputText) {\n\tlet d = new Dialog({\n\t\ttitle: 'How much Temp HP?',\n\t\tcontent: '<input name=\"temphp\" type=\"text\" class=\"temphp select-on-click\" placeholder=\"+Temp.\" title=\"Temporary Hit Points\" autofocus>',\n\t\tbuttons: {\n\t\t  ok: {\n\t\t\ticon: '',\n\t\t\tlabel: \"OK\",\n\t\t\tcallback: applyTHP\n\t\t  }\n\t\t},\n\t\tdefault: 'ok'\n\t  }, {width: 100});\n\tHooks.once('renderDialog', (a,inp) => inp[0].querySelector('input').focus());\n\td.render(true);\n}\nelse\n\tapplyTHP(null, inputText);\n\nfunction applyTHP(htm, fromButton=false) {\n\tcontrolled.forEach(selected => {\n\t\tlet change = 0, equal;\n\t\tif (fromButton || fromButton === '0')\n\t\t\tchange = fromButton;\n\t\telse\n\t\t\tchange = htm[0].querySelector('input').value;\n\t\tif (change.charAt(0) == '=') {\n\t\t\tequal = true;\n\t\t\tchange = change.slice(1);\n\t\t}\n\t\tlet parsed = parseInt((new Roll(change).roll()).total),\n\t\t\tdifference = Math.max(selected.data.data.attributes.hp.temp + parsed, 0);\n\t\tif (equal)\n\t\t\tselected.update({'data.attributes.hp.temp': parsed});\n\t\telse\n\t\t\tselected.update({'data.attributes.hp.temp': difference});\n\t});\n}","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/add_temp_hp.png","actorIds":[],"_id":"r4wbqk6YgFKhPrsS"}
{"name":"REMOVE CUB Effects","permission":{"default":0,"z3axZ8yAkgVHJACm":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Show Active/Passive Effects","colour":"#ff0000","trigger":""}},"core":{"sourceId":"Macro.SnRtyqW34JPBMHwG"}},"scope":"global","command":"game.cub.removeAllConditions()","author":"z3axZ8yAkgVHJACm","img":"modules/GMmacros/img/Effect_remove_CUB.png","actorIds":[],"_id":"tcfLoUc51K9ewxC3"}
